    {
      "name": "append-no-conflicts",
      "description": "Indexes the whole document corpus.",
      "default": true,
      "schedule": [
        {%- if ingest_mode is defined and ingest_mode == "data_stream" %}
        {
          "name": "put-timestamp-pipeline",
          "operation": {
            "operation-type": "put-pipeline",
            "id": "timestamp_pipeline",
            "body": {
              "processors": [
                  {
                      "set": {
                          "field": "now",
                          "value": {{'"{{_ingest.timestamp}}"'}}
                      }
                  },
                  {
                      "script": {
                          "source": "ZonedDateTime base = ZonedDateTime.parse('2021-04-28T17:18:23.410Z');long numDays = Duration.between(base, ZonedDateTime.parse(ctx['now'])).toDays();ZonedDateTime timestamp = ZonedDateTime.parse(ctx['@timestamp']);ctx['@timestamp']=timestamp.plusDays(numDays).truncatedTo(ChronoUnit.MILLIS).toString();"
                      }
                  },
                  {
                      "remove": {
                          "field": "now"
                      }
                  }
              ]
          }
          }
        },
        {
          "name": "create-all-templates",
          "operation": {
            "operation-type": "create-composable-template",
            "request-params": {
              "create": "true"
            }
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            },
            "retry-until-success": true
          }
        },
        {%- else %}
        {
          "operation": "delete-index"
        },
        {
          "operation": {
            "operation-type": "create-index",
            "settings": {{index_settings | default({}) | tojson}}
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "index": "tsdb",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            },
            "retry-until-success": true
          }
        },
        {%- endif %}
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}},
          "ignore-response-error-level": "{{error_level | default('non-fatal')}}"
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {
          "operation": {
            "operation-type": "force-merge",
            "request-timeout": 7200{%- if force_merge_max_num_segments is defined %},
            "max-num-segments": {{ force_merge_max_num_segments | tojson }}
            {%- endif %}
          }
        },
        {
          "name": "wait-until-merges-finish",
          "operation": {
            "operation-type": "index-stats",
            "index": "_all",
            "condition": {
              "path": "_all.total.merges.current",
              "expected-value": 0
            },
            "retry-until-success": true,
            "include-in-reporting": false
          }
        },
        {
          "name": "refresh-after-force-merge",
          "operation": "refresh"
        },
        {
          "operation": "default",
          "warmup-iterations": 50,
          "iterations": 100
        },
        {
          "operation": "default_1k",
          "warmup-iterations": 50,
          "iterations": 100
        },
        {
          "operation": "date-histo-entire-range",
          "warmup-iterations": 50,
          "iterations": 100
        }
      ]
    }
