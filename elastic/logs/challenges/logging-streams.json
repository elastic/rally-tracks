{% import "rally.helpers" as rally %}
{
  "name": "logging-streams",
  "description": "Indexes logs the streams way without dynamic mappings, either throttled or un-throttled, for a specified time period and volume per day",
  "schedule": [
    {
      "name": "logs-component-template",
      "operation": {
        "operation-type": "create-component-template",
        "template": "logs@stream.layer",
        "body": {
           "template": {
              "settings": {
                "index": {
                  "mode": "logsdb",
                  "codec": "best_compression",
                  "mapping": {
                    "total_fields": {
                      "ignore_dynamic_beyond_limit": "true"
                    },
                    "ignore_malformed": "true"
                  },
                  "sort": {
                    "field": [
                      "resource.attributes.host.name",
                      "@timestamp"
                    ],
                    "order": [
                      "asc",
                      "desc"
                    ]
                  }
                }
              },
              "mappings": {
                "dynamic": false,
                "properties": {
                  "scope.name": {
                    "type": "keyword"
                  },
                  "body.text": {
                    "type": "match_only_text"
                  },
                  "severity_text": {
                    "type": "keyword"
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "structured": {
                        "type": "flattened"
                      },
                      "text": {
                        "type": "match_only_text"
                      }
                    }
                  },
                  "scope.dropped_attributes_count": {
                    "type": "long"
                  },
                  "trace.id": {
                    "path": "trace_id",
                    "type": "alias"
                  },
                  "scope": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "subobjects": false
                      }
                    }
                  },
                  "resource.schema_url": {
                    "type": "keyword"
                  },
                  "log.level": {
                    "path": "severity_text",
                    "type": "alias"
                  },
                  "host.name": {
                    "path": "resource.attributes.host.name",
                    "type": "alias"
                  },
                  "resource.attributes.host.name": {
                    "type": "keyword"
                  },
                  "observed_timestamp": {
                    "type": "date"
                  },
                  "trace_id": {
                    "type": "keyword"
                  },
                  "resource": {
                    "type": "object",
                    "properties": {
                      "dropped_attributes_count": {
                        "type": "long"
                      },
                      "schema_url": {
                        "ignore_above": 1024,
                        "type": "keyword"
                      },
                      "attributes": {
                        "type": "object",
                        "subobjects": false
                      }
                    }
                  },
                  "span_id": {
                    "type": "keyword"
                  },
                  "span.id": {
                    "path": "span_id",
                    "type": "alias"
                  },
                  "message": {
                    "path": "body.text",
                    "type": "alias"
                  },
                  "@timestamp": {
                    "ignore_malformed": false,
                    "type": "date"
                  },
                  "dropped_attributes_count": {
                    "type": "long"
                  },
                  "severity_number": {
                    "type": "long"
                  },
                  "event_name": {
                    "type": "keyword"
                  },
                  "attributes": {
                    "type": "object",
                    "subobjects": false
                  },
                  "scope.version": {
                    "type": "keyword"
                  },
                  "resource.dropped_attributes_count": {
                    "type": "long"
                  },
                  "scope.schema_url": {
                    "type": "keyword"
                  }
                }
              }
            }
        }
      }
    },
    {
      "name": "logs-pipeline",
      "operation": {
        "operation-type": "put-pipeline",
        "id": "logs@stream.processing",
        "body": {
          "description": "Pipeline for processing logs stream",
          "processors": [
            {
              "set": {
                "description": "If '@timestamp' is missing, set it with the ingest timestamp",
                "field": "@timestamp",
                "override": false,
                "copy_from": "_ingest.timestamp"
              }
            },
            {
              "pipeline": {
                "name": "logs@json-pipeline",
                "ignore_missing_pipeline": true
              }
            },
            {
              "dot_expander": {
                "field": "*",
                "ignore_failure": true
              }
            },
            {
              "normalize_for_stream": {}
            },
            {
              "dot_expander": {
                "path": "resource.attributes",
                "field": "*",
                "ignore_failure": true
              }
            },
            {
              "dot_expander": {
                "path": "attributes",
                "field": "*",
                "ignore_failure": true
              }
            },
            {
              "script": {
                "source": "ctx[\"stream.name\"] = params.field",
                "lang": "painless",
                "params": {
                  "field": "logs"
                }
              }
            },
            {
              "pipeline": {
                "name": "logs@stream.reroutes",
                "ignore_missing_pipeline": true
              }
            }
          ]
        }
      }
    },
    {
      "name": "logs-index-template",
      "operation": {
        "operation-type": "create-composable-template",
        "template": "logs@stream",
        "body": {
          "index_patterns": [
            "logs"
          ],
          "template": {
            "settings": {
              "index": {
                "default_pipeline": "logs@stream.processing"
              }
            },
            "mappings": {
              "properties": {
                "stream.name": {
                  "type": "constant_keyword",
                  "value": "logs"
                }
              }
            }
          },
          "composed_of": [
            "logs@stream.layer"
          ],
          "priority": 1000,
          "version": 1,
          "_meta": {
            "managed": true,
            "description": "The index template for logs stream"
          },
          "data_stream": {
            "hidden": false,
            "allow_custom_routing": false
          }
        }
      }
    },
     {
      "name": "setup",
      "operation": {
        "operation-type": "put-pipeline",
        "id": "logs@custom",
        "body": {
          "description": "Sends all data to the 'logs' index. This is easier than changing the index name in the source.",
          "processors": [
            {
              "reroute": {
                "destination": "logs"
              }
            }
          ]
        }
      }
    },
    {
      "name": "bulk-index",
      "operation": {
        "operation-type": "raw-bulk",
        "param-source": "processed-source",
        "time-format": "milliseconds",
        "profile": "fixed_interval",
        "bulk-size": {{ p_bulk_size }},
        "detailed-results": true
      },
      "clients": {{ p_bulk_indexing_clients }}{% if p_throttle_indexing %},
      "ignore-response-error-level": "{{error_level | default('non-fatal')}}",
      "schedule": "timestamp-throttler",
      "max-delay-secs": 1
      {% endif %}
    },
      {
      "name": "compression-stats",
      "operation": {
        "operation-type": "compression-statistics",
        "data-stream": "logs"
      }
    },
    {
      "name": "force-merge-datastreams",
      "operation": {
        "operation-type": "force-merge",
        "index": "logs",
        "mode": "polling",
        "max-num-segments": 1,
        "request-timeout": 60
      }
    },
    {
      "name": "compression-stats-after-merge",
      "operation": {
        "operation-type": "compression-statistics",
        "data-stream": "logs"
      }
    }
  ]
}
