name: CI

on:
  push:
    branches: [ master, '[0-9]*' ]
  pull_request:
  schedule:
    - cron: '0 14 * * *'
  # Allows triggering the job manually
  workflow_dispatch:

env:
  DEFAULT_BRANCH: master
  # comma-separated list of paths that if changed will trigger a full CI run (Note: don't use trailing '/' at the end)
  RUN_FULL_CI_WHEN_CHANGED: |
    'es-revision', 'pyproject.toml',  '.pre-commit-config.yaml', 'catalog-info.yaml', '.github', '.buildkite', 'it', 'it_serverless'

permissions: "read-all"

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: "Install dependencies"
        run: python -m pip install .[develop]
      - uses: pre-commit/action@v3.0.0
      - uses: elastic/es-perf-github-status@v2
        if: ${{ failure() && ( github.event_name == 'schedule' || ( github.event_name == 'push' && github.ref_name == env.DEFAULT_BRANCH ) ) }}
        with:
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack_channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED

  filter-pr-changes:
    runs-on: ubuntu-22.04
    outputs:
      track_filter: ${{ steps.track-filter.outputs.track_filter }}
    steps:
      - uses: actions/checkout@v4
      - name: Parse repo and create filters.yml
        run: python3 .github/scripts/track-filter.py
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: changes
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/filters.yml
      - name: Collect changed tracks and calculate --track-filter argument
        id: track-filter
        run: |
            TRACKS=$(echo '${{ toJSON(steps.changes.outputs) }}' | jq -r '
            to_entries
            | map(select(.value == "true"))
            | map(.key)
            | join(",")
            ')
            if echo "$TRACKS" | grep -qw "full_ci"; then
            echo 'track_filter=' >> $GITHUB_OUTPUT
            else
            echo "track_filter=--track-filter=$TRACKS" >> $GITHUB_OUTPUT
            fi

  test:
    needs: filter-pr-changes
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os:
          - macos-13
          - ubuntu-latest

    runs-on: ${{ matrix.os }}
    name: unit ${{ fromJson('{"macos-13":"macOS","ubuntu-latest":"Ubuntu"}')[matrix.os] }} ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: "Install dependencies"
        run: python -m pip install .[develop]
      - name: "Run tests ${{ needs.filter-pr-changes.outputs.track_filter }}"
        run: hatch -v -e unit run test ${{ needs.filter-pr-changes.outputs.track_filter }}
      - uses: elastic/es-perf-github-status@v2
        if: ${{ failure() && ( github.event_name == 'schedule' || ( github.event_name == 'push' && github.ref_name == env.DEFAULT_BRANCH ) ) }}
        with:
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack_channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED

  rally-tracks-compat:
    needs: filter-pr-changes
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.12"]

    runs-on: ubuntu-22.04

    name: rally-tracks-compat ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - run: echo "JAVA21_HOME=$JAVA_HOME_21_X64" >> $GITHUB_ENV
      - run: echo "JAVA11_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
      - name: "Install dependencies"
        run: python -m pip install .[develop]
      - name: "Run tests ${{ needs.filter-pr-changes.outputs.track_filter }}"
        run: hatch -v -e it run test ${{ needs.filter-pr-changes.outputs.track_filter }}
        timeout-minutes: 120
        env:
          # elastic/endpoint fetches assets from GitHub, authenticate to avoid
          # being rate limited
          ASSETS_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: elastic/es-perf-github-status@v2
        if: ${{ failure() && ( github.event_name == 'schedule' || ( github.event_name == 'push' && github.ref_name == env.DEFAULT_BRANCH ) ) }}
        with:
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack_channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED
      # Artifact will show up under "Artifacts" in the "Summary" page of runs
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rally-tracks-compat-logs-${{ matrix.python-version }}
          path: |
            /home/runner/.rally/logs/
            /home/runner/.rally/benchmarks/races/**/*.log
          if-no-files-found: error
