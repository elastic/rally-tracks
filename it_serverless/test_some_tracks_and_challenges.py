# Licensed to Elasticsearch B.V. under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Elasticsearch B.V. licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

import pytest

from .conftest import ServerlessProjectConfig, write_options_file

pytest_rally = pytest.importorskip("pytest_rally")


class TestTrackRepository:
    #include_tracks = ["geonames", "geopoint", "geopointshape", "geoshape", "nyc_taxis", "so_vector"]
    include_tracks = ["geonames"]
    skip_challenges = {
        "nyc_taxis": ["esql"]
    }

    @pytest.mark.parametrize("operator", [False, True], ids=["User", "Operator"])
    def test_autogenerated(self, operator, tmp_path, rally, track, challenge, rally_options, serverless_project_config: ServerlessProjectConfig):
        client_options_file = write_options_file(serverless_project_config, operator, tmp_path)
        track_params = {"number_of_replicas": 1}
        if track in self.include_tracks and challenge not in self.skip_challenges.get(track, []):
            ret = rally.race(
                track=track, challenge=challenge, track_params=track_params, client_options=client_options_file,
                target_hosts=serverless_project_config.target_host, **rally_options
            )
            assert ret == 0
        else:
            pytest.skip()
