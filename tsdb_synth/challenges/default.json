    {
      "name": "append-no-conflicts",
      "description": "Indexes the whole document corpus and runs downsampling",
      "default": true,
      "schedule": [
        {%- if ingest_mode is defined and ingest_mode != "data_stream" %}
        {
          "operation": {
            "operation-type": "delete-index",
            "index": ["tsdb_synth-1m", "tsdb_synth-1h", "tsdb_synth-1d"]
          }
        },
        {%- endif %}
        {
          "name": "create-all-templates",
          "operation": {
            "operation-type": "create-composable-template",
            "request-params": {
              "create": "true"
            }
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            },
            "retry-until-success": true
          }
        },
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}}
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {
          "name": "force-merge-1",
          "operation": {
            "operation-type": "force-merge",
            "request-timeout": 15000{%- if force_merge_max_num_segments is defined %},
            "max-num-segments": {{ force_merge_max_num_segments | tojson }}
            {%- endif %}
          }
        },
        {
          "name": "wait-until-merges-finish-1",
          "operation": {
            "operation-type": "index-stats",
            "index": "_all",
            "condition": {
              "path": "_all.total.merges.current",
              "expected-value": 0
            },
            "retry-until-success": true,
            "include-in-reporting": false
          }
        },{
          "name": "force-merge-2",
          "operation": {
            "operation-type": "force-merge",
            "request-timeout": 15000{%- if force_merge_max_num_segments is defined %},
            "max-num-segments": {{ force_merge_max_num_segments | tojson }}
            {%- endif %}
          }
        },
        {
          "name": "wait-until-merges-finish-2",
          "operation": {
            "operation-type": "index-stats",
            "index": "_all",
            "condition": {
              "path": "_all.total.merges.current",
              "expected-value": 0
            },
            "retry-until-success": true,
            "include-in-reporting": false
          }
        },
        {
          "name": "refresh-after-force-merge",
          "operation": "refresh"
        }
        {%- if ingest_mode is defined and ingest_mode != "data_stream" %},
        {
          "name": "block-source-index-writes",
          "operation": {
            "operation-type": "raw-request",
            "path": "/tsdb_synth/_block/write",
            "method": "PUT"
          }
        },
        {
          "name": "downsample-1m",
          "operation": {
            "operation-type": "downsample",
            "fixed-interval": "1m"
          }
        },
        {
          "name": "downsample-1h",
          "operation": {
            "operation-type": "downsample",
            "fixed-interval": "1h"
          }
        },
        {
          "name": "downsample-1d",
          "operation": {
            "operation-type": "downsample",
            "fixed-interval": "1d"
          }
        }
        {%- endif %}
      ]
    }
