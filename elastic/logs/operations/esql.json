    {
      "name": "enable_query_cache",
      "include-in-reporting": false,
      "operation-type": "raw-request",
      "method": "PUT",
      "path": "/logs-*/_settings",
      "body": {
        "index.requests.cache.enable": true
      }
    },
    {
      "name": "disable_query_cache",
      "include-in-reporting": false,
      "operation-type": "raw-request",
      "method": "PUT",
      "path": "/logs-*/_settings",
      "body": {
        "index.requests.cache.enable": false
      }
    },
    {
      "name": "esql_basic_count_group_0",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) | SORT count DESC | LIMIT 20"
    },
    {
      "name": "esql_basic_count_group_1",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version | SORT count DESC | LIMIT 20"
    },
    {
      "name": "esql_basic_count_group_2",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version, agent.type | SORT count DESC | LIMIT 20"
    },
    {
      "name": "esql_basic_count_group_3",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version, agent.type, agent.hostname | SORT count DESC | LIMIT 20"
    },
    {
      "name": "esql_basic_count_group_4",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version, agent.type, agent.hostname, agent.id | SORT count DESC | LIMIT 20"
    },
    {
      "name": "search_basic_count_group_0",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "size": 0,
        "aggs": {
          "count": {
            "value_count": {
              "field": "agent.version"
            }
          }
        }
      }
    },
    {
      "name": "search_basic_count_group_1",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "size": 0,
        "aggs": {
          "count": {
            "terms": {
              "field": "agent.version",
              "size": 20
            }
          }
        }
      }
    },
    {
      "name": "search_basic_count_group_2",
      "operation-type": "search",
      "index": "logs-*",
      "body":{
        "size": 0,
        "aggs": {
          "count": {
            "multi_terms": {
              "terms": [
                { "field": "agent.version" },
                { "field": "agent.type" }
              ],
              "size": 20
            }
          }
        }
      }
    },
    {
      "name": "search_basic_count_group_3",
      "operation-type": "search",
      "index": "logs-*",
      "body":{
        "size": 0,
        "aggs": {
          "count": {
            "multi_terms": {
              "terms": [
                { "field": "agent.version" },
                { "field": "agent.type" },
                { "field": "agent.hostname" }
              ],
              "size": 20
            }
          }
        }
      }
    },
    {
      "name": "search_basic_count_group_4",
      "operation-type": "search",
      "index": "logs-*",
      "body":{
        "size": 0,
        "aggs": {
          "count": {
            "multi_terms": {
              "terms": [
                { "field": "agent.version" },
                { "field": "agent.type" },
                { "field": "agent.hostname" },
                { "field": "agent.id" }
              ],
              "size": 20
            }
          }
        }
      }
    },
    {
      "name": "esql_time_range_and_date_histogram_two_groups_pre_filter",
      "description": "Based on observability queries for average CPU over date histogram",
      "operation-type": "esql",
      "query": "FROM logs-* | EVAL start_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_start_date }}\"), end_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_end_date }}\") | WHERE @timestamp >= start_time AND @timestamp <= end_time AND http.response.body.bytes IS NOT NULL | EVAL bucket = DATE_TRUNC(1 hour, @timestamp) | STATS avg=AVG(http.response.body.bytes), min=MIN(http.response.body.bytes), max=MAX(http.response.body.bytes) BY data_stream.dataset, bucket | KEEP data_stream.dataset, bucket, min, avg, max"
    },
    {
      "name": "esql_time_range_and_date_histogram_two_groups_post_filter",
      "description": "Based on observability queries for average CPU over date histogram",
      "operation-type": "esql",
      "query": "FROM logs-* | EVAL start_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_start_date }}\"), end_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_end_date }}\") | WHERE @timestamp >= start_time AND @timestamp <= end_time | EVAL bucket = DATE_TRUNC(1 hour, @timestamp) | STATS avg=AVG(http.response.body.bytes), min=MIN(http.response.body.bytes), max=MAX(http.response.body.bytes) BY data_stream.dataset, bucket | WHERE min IS NOT NULL | KEEP data_stream.dataset, bucket, min, avg, max"
    },
    {
      "name": "esql_dissect_duration_and_stats",
      "description": "Based on observability queries for duration average",
      "operation-type": "esql",
      "query": "FROM logs-postgres* | DISSECT message \"duration: %{query_duration} ms\" | EVAL query_duration_num = TO_DOUBLE(query_duration) | STATS avg_duration = AVG(query_duration_num)"
    },
    {
      "name": "esql_basic_count_group_0_limit_0",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) | SORT count DESC | LIMIT 0"
    },
    {
      "name": "esql_basic_count_group_1_limit_0",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version | SORT count DESC | LIMIT 0"
    },
    {
      "name": "esql_basic_count_group_2_limit_0",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version, agent.type | SORT count DESC | LIMIT 0"
    },
    {
      "name": "esql_basic_count_group_3_limit_0",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version, agent.type, agent.hostname | SORT count DESC | LIMIT 0"
    },
    {
      "name": "esql_basic_count_group_4_limit_0",
      "operation-type": "esql",
      "query": "FROM logs-* | STATS count=count(*) BY agent.version, agent.type, agent.hostname, agent.id | SORT count DESC | LIMIT 0"
    },
    {
      "name": "esql_time_range_and_date_histogram_two_groups_pre_filter_limit_0",
      "description": "Based on observability queries for average CPU over date histogram",
      "operation-type": "esql",
      "query": "FROM logs-* | EVAL start_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_start_date }}\"), end_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_end_date }}\") | WHERE @timestamp >= start_time AND @timestamp <= end_time AND http.response.body.bytes IS NOT NULL | EVAL bucket = DATE_TRUNC(1 hour, @timestamp) | STATS avg=AVG(http.response.body.bytes), min=MIN(http.response.body.bytes), max=MAX(http.response.body.bytes) BY data_stream.dataset, bucket | KEEP data_stream.dataset, bucket, min, avg, max | LIMIT 0"
    },
    {
      "name": "esql_time_range_and_date_histogram_two_groups_post_filter_limit_0",
      "description": "Based on observability queries for average CPU over date histogram",
      "operation-type": "esql",
      "query": "FROM logs-* | EVAL start_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_start_date }}\"), end_time = DATE_PARSE(\"yyyy-MM-dd\",\"{{ bulk_end_date }}\") | WHERE @timestamp >= start_time AND @timestamp <= end_time | EVAL bucket = DATE_TRUNC(1 hour, @timestamp) | STATS avg=AVG(http.response.body.bytes), min=MIN(http.response.body.bytes), max=MAX(http.response.body.bytes) BY data_stream.dataset, bucket | WHERE min IS NOT NULL | KEEP data_stream.dataset, bucket, min, avg, max | LIMIT 0"
    },
    {
      "name": "esql_dissect_duration_and_stats_limit_0",
      "description": "Based on observability queries for duration average",
      "operation-type": "esql",
      "query": "FROM logs-postgres* | DISSECT message \"duration: %{query_duration} ms\" | EVAL query_duration_num = TO_DOUBLE(query_duration) | STATS avg_duration = AVG(query_duration_num) | LIMIT 0"
    }
